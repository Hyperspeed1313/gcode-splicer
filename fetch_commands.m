% Not a function in order to share main workspace scope
global commands;
commands.help.func = @show_help;
commands.help.args = 1;
commands.help.helptext = "Displays this text.";
commands.help.helptext_long = "";

commands.ls.func = @show_file_list;
commands.ls.args = 1;
commands.ls.helptext = "List all currently loaded files.";
commands.ls.helptext_long = ["ls <file>",char(10),...
char(10),...
"ls will display all files currently open. To display layer and line information",char(10),...
"for a specific file, specify the file's ID number after ls. For statisitcs of the",char(10),...
"buffer (staged changes), specify 'buffer' for <file>."];

% open
commands.open.func = @open_gcode_file;
commands.open.args = 0;
commands.open.helptext = "Open a gcode file.";
commands.open.helptext_long = ["Open a gcode file for manipulation by the tool.",char(10),...
"A GUI window will open asking the user to select the file they desire to open.",char(10),...
char(10),...
"Multiple files can be loaded at one time to support splicing of gcode",char(10),...
"from multiple files."];

% close
commands.close.func = @close_gcode_file;
commands.close.args = 1;
commands.close.helptext = "Close the specified gcode file.";
commands.close.helptext_long = ["close <file>",char(10),...
char(10),...
"Close file with ls ID <file>. If this file is used for any buffer operations,",char(10),...
"the buffer will be corrupted."];

% insert
commands.insert.func = @insert_layer;
commands.insert.args = 0; % TBD
commands.insert.helptext = "Insert layer into active file.";
commands.insert.helptext_long = "";

% remove
commands.remove.func = @remove_layer;
commands.remove.args = 0; % TBD
commands.remove.helptext = "Remove layer from active file.";
commands.remove.helptext_long = "";

% active
commands.active.func = @set_active_file;
commands.active.args = 1;
commands.active.helptext = "Set the active file. All changes in the buffer will be discarded.";
commands.active.helptext_long = "";

% write
commands.write.func = @save_buffer_to_file;
commands.write.args = 0;
commands.write.helptext = "Save the modified buffer to file.";
commands.write.helptext_long = ["Save all changes currently in the buffer to a user-specified",char(10),...
"filename. User will specify the file to write to via a GUI interface that",char(10),...
"will appear when 'write' is invoked by the user.",char(10),...
char(10),...
"No changes are made to any files prior to this step, and source files are",char(10),...
"always untouched unless the user intentionally overwrites the source filename."];

% draw
commands.draw.func = @draw_layer;
commands.draw.args = 2;
commands.draw.helptext = "Draw the specified layer";
commands.draw.helptext_long = ["draw <file> <layer>",char(10),...
char(10),...
"Draws exstrution lines made on the layer of gcode specified. For viewing a layer",char(10),...
"from the original file, specify the ls file index number. For viewing a layer in",char(10),...
"the buffer, specify 'buffer' as the file."];

% GCODE Flavor Control - disabled until more than marlin is implemented.
%commands.flavor.func = @set_gcode_flavor;
%commands.flavor.args = 2;
%commands.flavor.helptext = "Set the gcode flavor used by a file."
%commands.flavor.helptext_long = ["flavor <flavor> <file>",char(10),...
%char(10),...
%"Set the flavor of gcode used by the open file <file>. If no file is specified",char(10),...
%"the flavor will be applied as default to all open files opened in this session.",char(10),...
%char(10),...
%"By default, all files are opened as marlin gcode. For a list of all available",char(10),...
%"flavors, call flavor without any input arguments."];

% Printer for Error Checking, output flavor control - disabled for now
%commands.printer.func = @set_write_printer;
%commands.printer.args = 1;
%commands.printer.helptext = "Set the printer which the output will be used with."
%commands.printer.helptext_long = [...
%"printer <printer_name>",char(10),...
%char(10),...
%"Sets the printer which the final file will be compiled for. Error checking is",char(10),...
%"performed against printer bed dimensions, and gcode will be flavored based on",char(10),...
%"this setting.", char(10),...
%char(10),...
%"To disable error checking, use a gcode flavor instead of a printer name.", char(10),...
%char(10),...
%"For a list of available printers call printer without any arguments."];